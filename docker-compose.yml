services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: python -m uvicorn src.main:app --reload --host "0.0.0.0" --port 80
    ports:
      - ${PORT}:80
    networks:
      - local
    env_file:
      - compose.env
    volumes:
      - ./:/code
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: postgres:17.4
    restart: no
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - local
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 30s

  minio:
    image: minio/minio:RELEASE.2025-02-28T09-55-16Z
    command: server /data --console-address ":9001"
    restart: no
    networks:
      - local
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
      - MINIO_BROWSER_REFERRER_POLICY=no-referrer
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  db_data:
    driver: local
  minio_data:
    driver: local

networks:
  local:
    driver: bridge
